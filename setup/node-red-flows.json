[
    {
        "id": "520256e1.a96248",
        "type": "tab",
        "label": "Main Flow"
    },
    {
        "id": "f469ab65.e37a08",
        "type": "tab",
        "label": "Query Flow"
    },
    {
        "id": "33a93ce2.8961ec",
        "type": "tab",
        "label": "IoT Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "aa6754b2.331068",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/placeorder",
        "wholemsg": "false"
    },
    {
        "id": "c966264f.2ca718",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/updateorderstatus",
        "wholemsg": "false"
    },
    {
        "id": "597350f9.4ccc",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/placeorder",
        "wholemsg": "false"
    },
    {
        "id": "b8621e6b.b23ec8",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/updateorderstatus",
        "wholemsg": "false"
    },
    {
        "id": "e23127b9.9272d",
        "type": "websocket-listener",
        "z": "",
        "path": "ws://iot-insurance.eu-gb.mybluemix.net/ws/iot/event",
        "wholemsg": "false"
    },
    {
        "id": "39748e58.3396da",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/requestpolicy",
        "wholemsg": "false"
    },
    {
        "id": "fe0f463.2bc8738",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/createpolicy",
        "wholemsg": "false"
    },
    {
        "id": "8a7bfa58.e7c578",
        "type": "hyperledger-composer-config",
        "z": "",
        "cardName": "admin@iot-vehicle-lifecycle-network"
    },
    {
        "id": "f4e904e4.0d085",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/addusageevent",
        "wholemsg": "false"
    },
    {
        "id": "ce6641db.79c17",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/addusageevent",
        "wholemsg": "false"
    },
    {
        "id": "70a2e27b.84177c",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/createusagerecord",
        "wholemsg": "false"
    },
    {
        "id": "b01e647f.0e3da8",
        "type": "ibmiot",
        "z": "",
        "name": "IOTP",
        "keepalive": "60",
        "serverName": "",
        "cleansession": true,
        "appId": "",
        "shared": false
    },
    {
        "id": "7e33a89f.fcefc",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/iot/event",
        "wholemsg": "false"
    },
    {
        "id": "7c51bb89.268554",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/iot",
        "wholemsg": "false"
    },
    {
        "id": "c0314ae5.945be",
        "type": "websocket in",
        "z": "520256e1.a96248",
        "name": "",
        "server": "aa6754b2.331068",
        "client": "",
        "x": 146,
        "y": 69,
        "wires": [
            [
                "11df25cb.c02852",
                "e310662c.634d08"
            ]
        ]
    },
    {
        "id": "8aa097dc.b764e8",
        "type": "websocket out",
        "z": "520256e1.a96248",
        "name": "",
        "server": "aa6754b2.331068",
        "client": "",
        "x": 890,
        "y": 260,
        "wires": []
    },
    {
        "id": "c6738633.e6ebe",
        "type": "websocket in",
        "z": "520256e1.a96248",
        "name": "",
        "server": "c966264f.2ca718",
        "client": "",
        "x": 190,
        "y": 780,
        "wires": [
            [
                "19e970ef.7d0b3f",
                "81016738.bafff8"
            ]
        ]
    },
    {
        "id": "c4d457c5.855758",
        "type": "websocket out",
        "z": "520256e1.a96248",
        "name": "",
        "server": "c966264f.2ca718",
        "client": "",
        "x": 920,
        "y": 300,
        "wires": []
    },
    {
        "id": "19e970ef.7d0b3f",
        "type": "debug",
        "z": "520256e1.a96248",
        "name": "received UpdateOrderStatus socket msg",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 540,
        "y": 840,
        "wires": []
    },
    {
        "id": "a19544.c18e32c",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "parse",
        "func": "msg.payload = JSON.parse(msg.payload);\nmsg.url = context.global.endpoint + '/PlaceOrder'\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 689,
        "y": 99,
        "wires": [
            [
                "a2ec9412.fa79e",
                "6d15e902.5f5188"
            ]
        ]
    },
    {
        "id": "6e8c5837.df745",
        "type": "inject",
        "z": "520256e1.a96248",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 170,
        "y": 1000,
        "wires": [
            [
                "b31b6f30.13f7d8"
            ]
        ]
    },
    {
        "id": "46496a01.87ffac",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "parse",
        "func": "msg.payload = JSON.parse(msg.payload);\nmsg.payload.$class = 'org.example.vehicle.manufacturer.UpdateOrderStatus';\nmsg.url = context.global.endpoint + '/UpdateOrderStatus'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 800,
        "wires": [
            [
                "fc09250c.0f4b18",
                "73e2ba00.56e9a8"
            ]
        ]
    },
    {
        "id": "e310662c.634d08",
        "type": "change",
        "z": "520256e1.a96248",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "_session",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 372,
        "y": 69,
        "wires": [
            [
                "38b15f99.46a418"
            ]
        ]
    },
    {
        "id": "998b5069.2f6d28",
        "type": "inject",
        "z": "520256e1.a96248",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 1042,
        "wires": [
            [
                "ac13621a.84cee8"
            ]
        ]
    },
    {
        "id": "c728d002.8751f8",
        "type": "http request",
        "z": "520256e1.a96248",
        "name": "setup demo",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 488,
        "y": 1042,
        "wires": [
            [
                "6aa1e943.d57f78"
            ]
        ]
    },
    {
        "id": "6aa1e943.d57f78",
        "type": "debug",
        "z": "520256e1.a96248",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 672,
        "y": 1042,
        "wires": []
    },
    {
        "id": "ac13621a.84cee8",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "set msg.url",
        "func": "msg.url = context.global.endpoint + '/SetupDemo';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 327,
        "y": 1042,
        "wires": [
            [
                "c728d002.8751f8"
            ]
        ]
    },
    {
        "id": "4134b12b.a12c2",
        "type": "inject",
        "z": "520256e1.a96248",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 179.5,
        "y": 1081,
        "wires": [
            [
                "f78aa91e.03501"
            ]
        ]
    },
    {
        "id": "af957e82.f373d8",
        "type": "http request",
        "z": "520256e1.a96248",
        "name": "get orders",
        "method": "GET",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 487.5,
        "y": 1081,
        "wires": [
            [
                "c3279b0.8663ee8"
            ]
        ]
    },
    {
        "id": "c3279b0.8663ee8",
        "type": "debug",
        "z": "520256e1.a96248",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 671.5,
        "y": 1081,
        "wires": []
    },
    {
        "id": "f78aa91e.03501",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "set msg.url",
        "func": "msg.url = context.global.endpoint + '/Order';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 326.5,
        "y": 1081,
        "wires": [
            [
                "af957e82.f373d8"
            ]
        ]
    },
    {
        "id": "e2745ecc.8dff98",
        "type": "inject",
        "z": "520256e1.a96248",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 179.5,
        "y": 1121,
        "wires": [
            [
                "191e7b14.75626d"
            ]
        ]
    },
    {
        "id": "6d90eb92.4aca34",
        "type": "http request",
        "z": "520256e1.a96248",
        "name": "get vehicles",
        "method": "GET",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 487.5,
        "y": 1121,
        "wires": [
            [
                "c50660d2.d3bfd8"
            ]
        ]
    },
    {
        "id": "c50660d2.d3bfd8",
        "type": "debug",
        "z": "520256e1.a96248",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 671.5,
        "y": 1121,
        "wires": []
    },
    {
        "id": "191e7b14.75626d",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "set msg.url",
        "func": "msg.url = context.global.endpoint + '/Vehicle';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 326.5,
        "y": 1121,
        "wires": [
            [
                "6d90eb92.4aca34"
            ]
        ]
    },
    {
        "id": "eb9303db.ace04",
        "type": "inject",
        "z": "520256e1.a96248",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 178.5,
        "y": 1162,
        "wires": [
            [
                "f001d1af.ccc908"
            ]
        ]
    },
    {
        "id": "104b5919.b93f8f",
        "type": "http request",
        "z": "520256e1.a96248",
        "name": "get transactions",
        "method": "GET",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 496.5,
        "y": 1162,
        "wires": [
            [
                "cd40cd55.faf72"
            ]
        ]
    },
    {
        "id": "cd40cd55.faf72",
        "type": "debug",
        "z": "520256e1.a96248",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 670.5,
        "y": 1162,
        "wires": []
    },
    {
        "id": "f001d1af.ccc908",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "set msg.url",
        "func": "msg.url = context.global.endpoint + '/UpdateOrderStatus';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 325.5,
        "y": 1162,
        "wires": [
            [
                "104b5919.b93f8f"
            ]
        ]
    },
    {
        "id": "38b15f99.46a418",
        "type": "switch",
        "z": "520256e1.a96248",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "__ping__",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 557,
        "y": 69,
        "wires": [
            [
                "fc959064.1b167"
            ],
            [
                "a19544.c18e32c"
            ]
        ]
    },
    {
        "id": "47d99264.2267ec",
        "type": "websocket out",
        "z": "520256e1.a96248",
        "name": "",
        "server": "aa6754b2.331068",
        "client": "",
        "x": 862.5,
        "y": 51,
        "wires": []
    },
    {
        "id": "fc959064.1b167",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "pong",
        "func": "msg.payload = '__pong__';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 689,
        "y": 51,
        "wires": [
            [
                "47d99264.2267ec"
            ]
        ]
    },
    {
        "id": "81016738.bafff8",
        "type": "switch",
        "z": "520256e1.a96248",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "__ping__",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 430,
        "y": 780,
        "wires": [
            [
                "69657dd4.3a7344"
            ],
            [
                "46496a01.87ffac"
            ]
        ]
    },
    {
        "id": "5678bcf0.fd6e7c",
        "type": "change",
        "z": "520256e1.a96248",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "_session",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 760,
        "wires": [
            [
                "6993e6f9.425f48"
            ]
        ]
    },
    {
        "id": "6993e6f9.425f48",
        "type": "websocket out",
        "z": "520256e1.a96248",
        "name": "",
        "server": "c966264f.2ca718",
        "client": "",
        "x": 1180,
        "y": 760,
        "wires": []
    },
    {
        "id": "69657dd4.3a7344",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "pong",
        "func": "msg.payload = '__pong__';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 760,
        "wires": [
            [
                "5678bcf0.fd6e7c"
            ]
        ]
    },
    {
        "id": "d8b0dc04.f0079",
        "type": "hyperledger-composer-in",
        "z": "520256e1.a96248",
        "name": "receive event",
        "composerCard": "8a7bfa58.e7c578",
        "actionType": "create",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "7dd52a76.b38e9c",
                "f5fc18c2.5fb768"
            ]
        ]
    },
    {
        "id": "7dd52a76.b38e9c",
        "type": "debug",
        "z": "520256e1.a96248",
        "name": "event received",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 340,
        "y": 220,
        "wires": []
    },
    {
        "id": "f5fc18c2.5fb768",
        "type": "switch",
        "z": "520256e1.a96248",
        "name": "",
        "property": "$class",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "org.example.vehicle.manufacturer.PlaceOrderEvent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "org.example.vehicle.manufacturer.UpdateOrderStatusEvent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "org.example.vda.AddUsageEventEvent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "org.example.insurance.PolicyEvent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "org.example.vda.CreateUsageRecordEvent",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 5,
        "x": 310,
        "y": 320,
        "wires": [
            [
                "91488d3.9c8087",
                "c6d0d4e7.d284a8"
            ],
            [
                "e170c315.162d58"
            ],
            [
                "ea0a169f.74c4f"
            ],
            [
                "22c7ae3f.3e6702"
            ],
            [
                "3df76fae.1231b"
            ]
        ]
    },
    {
        "id": "11df25cb.c02852",
        "type": "debug",
        "z": "520256e1.a96248",
        "name": "received PlaceOrder socket msg",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 411,
        "y": 130,
        "wires": []
    },
    {
        "id": "a2ec9412.fa79e",
        "type": "hyperledger-composer-out",
        "z": "520256e1.a96248",
        "name": "submit placeorder tx",
        "composerCard": "8a7bfa58.e7c578",
        "actionType": "create",
        "x": 874,
        "y": 102,
        "wires": []
    },
    {
        "id": "ebd73154.2f3b8",
        "type": "hyperledger-composer-out",
        "z": "520256e1.a96248",
        "name": "submit update status tx",
        "composerCard": "8a7bfa58.e7c578",
        "actionType": "create",
        "x": 910,
        "y": 220,
        "wires": []
    },
    {
        "id": "91488d3.9c8087",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "parse",
        "func": "eventMsg = {};\neventMsg.payload = {};\neventMsg.payload.orderId = msg.orderId;\neventMsg.payload.vehicleDetails = msg.vehicleDetails;\neventMsg.payload.timestamp = msg.timestamp;\neventMsg.payload.transactionId = msg.eventId.substr(0, msg.eventId.indexOf('#'));\nreturn eventMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 260,
        "wires": [
            [
                "8aa097dc.b764e8"
            ]
        ]
    },
    {
        "id": "e170c315.162d58",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "parse",
        "func": "eventMsg = {};\neventMsg.payload = {};\neventMsg.payload.order = msg.order;\neventMsg.payload.orderStatus = msg.orderStatus;\neventMsg.payload.timestamp = msg.timestamp;\neventMsg.payload.transactionId = msg.eventId.substr(0, msg.eventId.indexOf('#'));\n\nreturn eventMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 300,
        "wires": [
            [
                "c4d457c5.855758"
            ]
        ]
    },
    {
        "id": "6d15e902.5f5188",
        "type": "debug",
        "z": "520256e1.a96248",
        "name": "transaction payload",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 864.5,
        "y": 147,
        "wires": []
    },
    {
        "id": "c6d0d4e7.d284a8",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "create new payload",
        "func": "var order = msg;\nconsole.log('What is the event payload?',order)\ndelete msg._session;\ndelete msg.headers;\ndelete msg.responseUrl;\ndelete msg.statusCode;\n\nmsg.payload = {\n    \"$class\":'org.example.vehicle.manufacturer.UpdateOrderStatus',\n    \"vin\": \"\",\n    \"v5c\": \"\",\n    \"numberPlate\": \"\",\n    \"order\": order.orderId,\n    \"orderStatus\": \"PLACED\"\n};\n\nmsg.url = context.global.endpoint + '/UpdateOrderStatus'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 220,
        "wires": [
            [
                "ebd73154.2f3b8"
            ]
        ]
    },
    {
        "id": "fc09250c.0f4b18",
        "type": "debug",
        "z": "520256e1.a96248",
        "name": "transaction payload",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 890,
        "y": 840,
        "wires": []
    },
    {
        "id": "73e2ba00.56e9a8",
        "type": "hyperledger-composer-out",
        "z": "520256e1.a96248",
        "name": "submit update status tx",
        "composerCard": "8a7bfa58.e7c578",
        "actionType": "create",
        "x": 910,
        "y": 800,
        "wires": []
    },
    {
        "id": "fdbe7652.f22f9",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "REST API URL Configuration",
        "func": "let something;\nif(msg.payload.trim()){\n    context.global.endpoint = msg.payload.trim();\n}\nelse{\n    context.global.endpoint = \"http://localhost:4000/api\";\n}\nconsole.log('What is context.global.endpoint?',context.global.endpoint);",
        "outputs": 1,
        "noerr": 0,
        "x": 736.5,
        "y": 996,
        "wires": [
            []
        ]
    },
    {
        "id": "b31b6f30.13f7d8",
        "type": "exec",
        "z": "520256e1.a96248",
        "command": "echo $COMPOSER_BASE_URL",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "oldrc": false,
        "name": "Get REST API Environment Variable",
        "x": 403.5,
        "y": 998.5,
        "wires": [
            [
                "fdbe7652.f22f9"
            ],
            [],
            []
        ]
    },
    {
        "id": "b02eacb1.3735f8",
        "type": "inject",
        "z": "f469ab65.e37a08",
        "name": "",
        "topic": "",
        "payload": "{\"$class\": \"org.example.vda.ScrapAllVehiclesByColour\", \"colour\":\"grey\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 183,
        "y": 71,
        "wires": [
            [
                "8c509ec9.2b2e7"
            ]
        ]
    },
    {
        "id": "8c509ec9.2b2e7",
        "type": "hyperledger-composer-out",
        "z": "f469ab65.e37a08",
        "name": "ScrapAllVehiclesByColour",
        "composerCard": "8a7bfa58.e7c578",
        "actionType": "create",
        "x": 479,
        "y": 70.75,
        "wires": []
    },
    {
        "id": "b0920384.fb6fd8",
        "type": "websocket in",
        "z": "520256e1.a96248",
        "name": "",
        "server": "39748e58.3396da",
        "client": "",
        "x": 200,
        "y": 600,
        "wires": [
            [
                "fb7f67a8.d3edf8"
            ]
        ]
    },
    {
        "id": "fb7f67a8.d3edf8",
        "type": "change",
        "z": "520256e1.a96248",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "_session",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 600,
        "wires": [
            [
                "f55e8385.106e9"
            ]
        ]
    },
    {
        "id": "f55e8385.106e9",
        "type": "websocket out",
        "z": "520256e1.a96248",
        "name": "",
        "server": "39748e58.3396da",
        "client": "",
        "x": 740,
        "y": 600,
        "wires": []
    },
    {
        "id": "8e5d1ebb.8527b",
        "type": "websocket in",
        "z": "520256e1.a96248",
        "name": "",
        "server": "fe0f463.2bc8738",
        "client": "",
        "x": 200,
        "y": 680,
        "wires": [
            [
                "1a37099f.ccbab6"
            ]
        ]
    },
    {
        "id": "1a37099f.ccbab6",
        "type": "change",
        "z": "520256e1.a96248",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "_session",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 680,
        "wires": [
            [
                "f22daa93.05d868"
            ]
        ]
    },
    {
        "id": "f22daa93.05d868",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "parse",
        "func": "msg.payload = JSON.parse(msg.payload);\nmsg.url = context.global.endpoint + '/CreatePolicy'\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 680,
        "wires": [
            [
                "36ad8be0.18fd3c"
            ]
        ]
    },
    {
        "id": "36ad8be0.18fd3c",
        "type": "hyperledger-composer-out",
        "z": "520256e1.a96248",
        "name": "submit createpolicy tx",
        "composerCard": "8a7bfa58.e7c578",
        "actionType": "create",
        "x": 900,
        "y": 680,
        "wires": []
    },
    {
        "id": "ea0a169f.74c4f",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "parse",
        "func": "eventMsg = {};\neventMsg.payload = msg;\n\nreturn eventMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 340,
        "wires": [
            [
                "84725f91.0412d"
            ]
        ]
    },
    {
        "id": "84725f91.0412d",
        "type": "websocket out",
        "z": "520256e1.a96248",
        "name": "",
        "server": "f4e904e4.0d085",
        "client": "",
        "x": 910,
        "y": 340,
        "wires": []
    },
    {
        "id": "caf990b2.da6f7",
        "type": "websocket in",
        "z": "520256e1.a96248",
        "name": "",
        "server": "70a2e27b.84177c",
        "client": "",
        "x": 180,
        "y": 520,
        "wires": [
            [
                "6d5dfc61.bf8f94"
            ]
        ]
    },
    {
        "id": "6d5dfc61.bf8f94",
        "type": "change",
        "z": "520256e1.a96248",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "_session",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 520,
        "wires": [
            [
                "8f747bb3.3276f"
            ]
        ]
    },
    {
        "id": "8f747bb3.3276f",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "parse",
        "func": "msg.payload = JSON.parse(msg.payload);\nmsg.url = context.global.endpoint + '/CreateUsageRecord'\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 520,
        "wires": [
            [
                "46d599e9.effbc"
            ]
        ]
    },
    {
        "id": "46d599e9.effbc",
        "type": "hyperledger-composer-out",
        "z": "520256e1.a96248",
        "name": "submit createusagerecord tx",
        "composerCard": "8a7bfa58.e7c578",
        "actionType": "create",
        "x": 920,
        "y": 520,
        "wires": []
    },
    {
        "id": "7c5aa9cc.80caf",
        "type": "websocket out",
        "z": "520256e1.a96248",
        "name": "",
        "server": "fe0f463.2bc8738",
        "client": "",
        "x": 900,
        "y": 380,
        "wires": []
    },
    {
        "id": "22c7ae3f.3e6702",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "parse",
        "func": "eventMsg = {};\neventMsg.payload = msg;\n\nreturn eventMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 380,
        "wires": [
            [
                "7c5aa9cc.80caf"
            ]
        ]
    },
    {
        "id": "c0d4691f.6126f",
        "type": "websocket out",
        "z": "520256e1.a96248",
        "name": "",
        "server": "70a2e27b.84177c",
        "client": "",
        "x": 920,
        "y": 420,
        "wires": []
    },
    {
        "id": "3df76fae.1231b",
        "type": "function",
        "z": "520256e1.a96248",
        "name": "parse",
        "func": "eventMsg = {};\neventMsg.payload = msg;\n\nreturn eventMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 420,
        "wires": [
            [
                "c0d4691f.6126f"
            ]
        ]
    },
    {
        "id": "edd1da92.94b93",
        "type": "ibmiot in",
        "z": "33a93ce2.8961ec",
        "authentication": "quickstart",
        "apiKey": "b01e647f.0e3da8",
        "inputType": "evt",
        "deviceId": "b0b448c04e85",
        "applicationId": "",
        "deviceType": "+",
        "eventType": "+",
        "commandType": "",
        "format": "json",
        "name": "IBM IoTP Test Device",
        "service": "quickstart",
        "allDevices": false,
        "allApplications": false,
        "allDeviceTypes": true,
        "allEvents": true,
        "allCommands": false,
        "allFormats": false,
        "qos": "0",
        "x": 480,
        "y": 440,
        "wires": [
            [
                "718175a6.6bb4f4"
            ]
        ]
    },
    {
        "id": "59b65297.845464",
        "type": "switch",
        "z": "33a93ce2.8961ec",
        "name": "Event",
        "property": "payload.d.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACTIVATED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NONE",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 3,
        "x": 1130,
        "y": 380,
        "wires": [
            [
                "9866eaf5.3ddf7"
            ],
            [
                "12941bc2.fff8dc"
            ],
            [
                "b0fef402.b9958"
            ]
        ]
    },
    {
        "id": "718175a6.6bb4f4",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "Compute Event",
        "func": "// Ref: http://www.pieter-jan.com/node/11\n// Using a complimentary filer\n\nvar events = flow.get('events');\n//\"ACTIVATED\",\"CRASHED\",\"OVERHEATED\",\"OIL_FREEZING\",\"ENGINE_FAILURE\"\nvar lastevent = flow.get('lastevent') |\"NONE\";\nvar vin = flow.get('vin') || \"UNDEFINED\";\nd = msg.payload.d;\nvar key_count = 0;\nfor(var key in d)\n{\n    d[key] = d[key].split(',').join('.');\n}\nif(d.accelX)\n{\n    // DATA SENT BY IPHONE NEED TO FORMAT IT AS ANDROID WOULD\n    for(var key in d)\n    {\n        var new_key = key.replace(/([A-Z])/g, function($1){return \"_\"+$1.toLowerCase();});\n        if(key.indexOf('accel') != -1)\n        {\n            new_key = new_key.split('el').join('')\n        }\n        d[new_key] = d[key]\n    }\n}\nmsg.payload.d.event = \"NONE\";\nmsg.payload.d.vin = vin;\n\nvar num_keys = Object.keys(d).length;\n\nif (d.myName && num_keys == 3){  // ON CONNECT EVENT DEVICE JUST SENDS 1 FIELD SO CHECK IF EQUAL TO 3 AS WE ADD 2\n        msg.payload.d.event = \"ACTIVATED\";\n} else {\n    // basic assumption: since this is a demo, it is unlikely that two of our events \n    // will occur simultaneously - mag TBD\n    // If they do, overwrites may happen\n    //////////////////////////////////////////////\n    //For Crash related events\n    var pitch       =   flow.get('pitch')||0;\n    var roll        =   flow.get('roll')||0;\n    var accsense    =   flow.get('accSensitivity')||0;\n    var gyrsense    =   flow.get('gyroSensitivity')||0;\n    var dt          =   flow.get('dt',0.01);\n    \n    // pitch and roll calculation -  can be trained further\n    pitch += ((d.gyro_x*1000) / gyrsense) * dt;\n    roll -= ((d.gyro_y*1000) / gyrsense) * dt;\n    \n    forceMagnitudeApprox = Math.abs((d.acc_x*1000))+Math.abs((d.acc_y*1000))+Math.abs((d.acc_z*1000));\n    \n    if (forceMagnitudeApprox > 8192 && forceMagnitudeApprox < 32768)\n    {\n    // Turning around the X axis results in a vector on the Y-axis\n        pitchAcc = Math.atan2((d.acc_y *1000), (d.acc_z*1000)) * 180 / Math.PI;\n        pitch = pitch * 0.98 + pitchAcc * 0.02;\n    \n    // Turning around the Y axis results in a vector on the X-axis\n        rollAcc = Math.atan2((d.acc_x*1000), (d.acc_z*1000)) * 180 / Math.PI;\n        roll = roll * 0.98 + rollAcc * 0.02;\n    }\n    \n    pitchDiff = Math.abs(Math.abs(flow.get('pitch')) - Math.abs(pitch));\n    rollDiff = Math.abs(Math.abs(flow.get('roll')) - Math.abs(roll));\n    \n    \n    msg.payload.d.pitch = pitch;\n    msg.payload.d.pitchdiff = pitchDiff;\n    msg.payload.d.roll = roll;\n    msg.payload.d.rolldiff = rollDiff;\n    \n    var acc_x = msg.payload.d.acc_x.split(',').join('.');\n    var acc_y = msg.payload.d.acc_y.split(',').join('.');\n    var acc_z = msg.payload.d.acc_z.split(',').join('.');\n    var magnitude = Math.sqrt((acc_x*acc_x)+(acc_y*acc_y)+(acc_z*acc_z))\n\n    ///////////////////////////////////////\n    // For Temp related Events\n    var lastambtemp =   flow.get('lastambtemp')||d.ambient_temp;\n    var lastobjtemp =   flow.get('lastobjtemp')||d.object_temp;\n    /////////////////////////////////////////\n    // Similarly, to come for magnetometer - not yet tested\n    \n    //////////////////////////////////////////\n    //  Events\n    //////////////////////////////////////////\n    // Is this a crash event?\n    if(magnitude > flow.get('allowed-acc') && event_allowed(\"CRASHED\"))\n    {\n        disallow_event(\"CRASHED\");\n        msg.payload.d.event = \"CRASHED\";\n    }\n    /*\n    if (Math.abs(d.acc_x - flow.get('resting-x-acc')) > flow.get('accelerometer-allowable-diff') && event_allowed(\"CRASHED\"))\n    {\n        disallow_event(\"CRASHED\");\n        msg.payload.d.event = \"CRASHED\";\n    }\n    if (Math.abs(d.acc_y - flow.get('resting-y-acc')) > flow.get('accelerometer-allowable-diff') && event_allowed(\"CRASHED\"))\n    {\n        disallow_event(\"CRASHED\");\n        msg.payload.d.event = \"CRASHED\";\n    }\n    if (Math.abs(d.acc_z - flow.get('resting-z-acc')) > flow.get('accelerometer-allowable-diff') && event_allowed(\"CRASHED\"))\n    {\n        disallow_event(\"CRASHED\");\n        msg.payload.d.event = \"CRASHED\";\n    }\n    */\n    /*\n    if (pitchDiff >flow.get('pitchdelta') && rollDiff >flow.get('rolldelta'))\n        msg.payload.d.event = \"CRASHED\";\n    */    \n    // Is this a over heating event?\n    // Going with object temperature for now. Will tweak as needed\n    if (d.object_temp > flow.get('too-hot') && event_allowed(\"OVERHEATED\")) {\n        disallow_event(\"OVERHEATED\");\n        msg.payload.d.event = \"OVERHEATED\";\n    }\n    \n    // Is this a freezing event?\n    // Going with object temperature for now. Will tweak as needed\n    if (d.object_temp < flow.get('too-cold') && event_allowed(\"OIL_FREEZING\")) {\n        disallow_event(\"OIL_FREEZING\");\n        msg.payload.d.event = \"OIL_FREEZING\";\n    }\n    // TODO: Add Magnetometer calculation to determine engine failure\n    // Set the flow context  variables with the new values\n    \n    flow.set('pitch', pitch);\n    flow.set('roll', roll);\n    msg.payload.d.lastobjtemp = lastobjtemp;\n    flow.set('lastambtemp',d.ambient_temp);\n    flow.set('lastobjtemp',d.object_temp);\n    // To be fed in from the webhook - overwrite device id with vin number\n    msg.payload.d.vehicleId = \"VIN001\";\n}\n\n\n\n    // added for my testing in node-red. possibly can be removed as timestamp will come from chaincode\n    var currentdate = new Date(); \n    var datetime = currentdate.getDate() + \"/\";\n     datetime +=(currentdate.getMonth()+1)  + \"/\" ;\n     datetime +=currentdate.getFullYear() + \" @ \"  ;\n     datetime +=currentdate.getHours() + \":\"  ;\n     datetime +=currentdate.getMinutes() + \":\" ;\n     datetime +=currentdate.getSeconds() + \" UTC\";\n     msg.payload.d.eventtime = datetime;\n     flow.set('lastevent',msg.payload.d.event);\n     if (msg.payload.d.event == lastevent) {\n         msg.payload.d.event = \"NONE\";\n     }\n     \nfunction event_allowed(event_type)\n{\n    return flow.get('allowed-events').includes(event_type)\n}\nfunction disallow_event(event_type)\n{\n    var events = flow.get('allowed-events');\n    var index = events.indexOf(event_type);\n    if (index !== -1) {\n        events.splice(index, 1);\n        flow.set('allowed-events', events)\n    }\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 911,
        "y": 380,
        "wires": [
            [
                "59b65297.845464"
            ]
        ]
    },
    {
        "id": "b0fef402.b9958",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "Create an Event",
        "func": "var eventMsg = {}\neventMsg.payload = {}\neventMsg.payload.d = msg.payload.d\nreturn eventMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 460,
        "wires": [
            [
                "91457fb3.1af528"
            ]
        ]
    },
    {
        "id": "c2c1aee6.df514",
        "type": "websocket out",
        "z": "33a93ce2.8961ec",
        "name": "",
        "server": "7c51bb89.268554",
        "client": "",
        "x": 1550,
        "y": 380,
        "wires": []
    },
    {
        "id": "12941bc2.fff8dc",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "Regular Stream",
        "func": "var acc_x = msg.payload.d.acc_x.split(',').join('.');\nvar acc_y = msg.payload.d.acc_y.split(',').join('.');\nvar acc_z = msg.payload.d.acc_z.split(',').join('.');\nvar magnitude = Math.sqrt((acc_x*acc_x)+(acc_y*acc_y)+(acc_z*acc_z))\n\nvar eventMsg = {}\neventMsg.payload = {}\neventMsg.payload.acceleration = magnitude;\neventMsg.payload.outside_temperature = msg.payload.d.ambient_temp.split(',').join('.');\neventMsg.payload.object_temperature = msg.payload.d.object_temp.split(',').join('.');\neventMsg.payload.light_level = msg.payload.d.light.split(',').join('.');\nreturn eventMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 380,
        "wires": [
            [
                "c2c1aee6.df514"
            ]
        ]
    },
    {
        "id": "9866eaf5.3ddf7",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "Connection Event",
        "func": "var eventMsg = {};\neventMsg.payload = {};\neventMsg.payload.connected = true;\nreturn eventMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 300,
        "wires": [
            [
                "a5cbe6c2.f414b",
                "fedef2cc.a5d658"
            ]
        ]
    },
    {
        "id": "a5cbe6c2.f414b",
        "type": "websocket out",
        "z": "33a93ce2.8961ec",
        "name": "",
        "server": "7c51bb89.268554",
        "client": "",
        "x": 1550,
        "y": 300,
        "wires": []
    },
    {
        "id": "96c4e250.d57ec",
        "type": "websocket in",
        "z": "33a93ce2.8961ec",
        "name": "",
        "server": "7c51bb89.268554",
        "client": "",
        "x": 190,
        "y": 700,
        "wires": [
            [
                "d1c78432.64fb1"
            ]
        ]
    },
    {
        "id": "d1c78432.64fb1",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "Store returned VIN",
        "func": "flow.set('vin', JSON.parse(msg.payload).vin)\n\nvar eventMsg = {}\neventMsg.payload = {}\neventMsg.payload.vin = flow.get('vin')\nreturn eventMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 700,
        "wires": [
            [
                "710f897a.c3733"
            ]
        ]
    },
    {
        "id": "710f897a.c3733",
        "type": "debug",
        "z": "33a93ce2.8961ec",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 590,
        "y": 700,
        "wires": []
    },
    {
        "id": "970ff1de.9b5eb",
        "type": "inject",
        "z": "33a93ce2.8961ec",
        "name": "PUSH CONNECT ATTEMPT",
        "topic": "",
        "payload": "{\"d\":{\"myName\":\"CC2650 SensorTag\"}}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 460,
        "y": 180,
        "wires": [
            [
                "718175a6.6bb4f4"
            ]
        ]
    },
    {
        "id": "aebb5d3b.a9211",
        "type": "inject",
        "z": "33a93ce2.8961ec",
        "name": "PUSH OVERHEATED",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 280,
        "y": 220,
        "wires": [
            [
                "e5b4c77c.2efc08"
            ]
        ]
    },
    {
        "id": "43ab2535.261544",
        "type": "inject",
        "z": "33a93ce2.8961ec",
        "name": "PUSH OIL_FREEZING",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 280,
        "y": 260,
        "wires": [
            [
                "495e85b4.6813a4"
            ]
        ]
    },
    {
        "id": "8829e236.49b04",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "Initialise list of allowed events",
        "func": "flow.set('allowed-events', [\"ACTIVATED\",\"CRASHED\",\"OVERHEATED\",\"OIL_FREEZING\",\"ENGINE_FAILURE\"])\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 60,
        "wires": [
            [
                "bc53e640.72e0f8"
            ]
        ]
    },
    {
        "id": "2debdf2a.0f6e5",
        "type": "inject",
        "z": "33a93ce2.8961ec",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 210,
        "y": 60,
        "wires": [
            [
                "8829e236.49b04"
            ]
        ]
    },
    {
        "id": "3b76379f.4cd448",
        "type": "inject",
        "z": "33a93ce2.8961ec",
        "name": "PUSH CRASH",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 310,
        "y": 300,
        "wires": [
            [
                "20ad2ad7.94e906"
            ]
        ]
    },
    {
        "id": "fedef2cc.a5d658",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "Reset allowable events list",
        "func": "flow.set('allowed-events', [\"ACTIVATED\",\"CRASHED\",\"OVERHEATED\",\"OIL_FREEZING\",\"ENGINE_FAILURE\"])\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1600,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "91457fb3.1af528",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "parse",
        "func": "var eventMsg = {}\nvar message = msg.payload.d;\nvar acceleration = Math.sqrt((message.acc_x*message.acc_x)+(message.acc_y*message.acc_y)+(message.acc_z*message.acc_z))\n\neventMsg.payload = {\n  \"$class\": \"org.example.vda.AddUsageEvent\",\n  \"vin\": message.vin,\n  \"usageEvent\": {\n    \"$class\": \"org.example.vda.UsageEvent\",\n    \"eventID\": generateID(),\n    \"eventType\": message.event,\n    \"acceleration\": acceleration,\n    \"roll\": message.roll,\n    \"pitch\": message.pitch,\n    \"engine_temperature\": message.object_temp,\n    \"air_temperature\": message.ambient_temp,\n    \"light_level\": message.light,\n    \"timestamp\": new Date()\n  }\n}\neventMsg.url = context.global.endpoint + '/AddUsageEvent'\n\nfunction generateID() { // EXISTING EVENTS DON'T COME WITH ID SO MAKE ONE FOR SCROLLING PURPOSES\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n        s4() + '-' + s4() + s4() + s4();\n}\n\nreturn eventMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1530,
        "y": 460,
        "wires": [
            [
                "e23553d7.3d6648",
                "7b07dfc8.dafaa8"
            ]
        ]
    },
    {
        "id": "e23553d7.3d6648",
        "type": "hyperledger-composer-out",
        "z": "33a93ce2.8961ec",
        "name": "submit addusageevent tx",
        "composerCard": "8a7bfa58.e7c578",
        "actionType": "create",
        "x": 1750,
        "y": 460,
        "wires": []
    },
    {
        "id": "7b07dfc8.dafaa8",
        "type": "debug",
        "z": "33a93ce2.8961ec",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1710,
        "y": 500,
        "wires": []
    },
    {
        "id": "bc53e640.72e0f8",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "Set Contexts",
        "func": "// Ref: http://www.pieter-jan.com/node/11\n// This could easily be incorporated in the function, but \n// separating it out makes in cleaner and flow context helps expand the case\n//flow.set('count',0);\n// This will vary based on your IoTP device configuration\nflow.set('events','{\"ACTIVATED\",\"CRASHED\",\"OVERHEATED\",\"OIL_FREEZING\",\"ENGINE_FAILURE\"}');\nflow.set('deviceid',\"vehicle\");\nflow.set('pitch',0);\nflow.set('roll',0);\nflow.set('accSensitivity',8192.0);\nflow.set('gyroSensitivity',65.536);\nflow.set('dt',0.01);\t// 10 ms sample rate!\nflow.set('too-hot', 100);\nflow.set('too-cold', 5);\nflow.set('allowed-acc', 2.2)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e5b4c77c.2efc08",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "HOT PAYLOAD",
        "func": "msg.payload = {\n    \"d\": {\n        \"gyro_x\": \"-0,08\",\n        \"compass_y\": \"-35,67\",\n        \"acc_y\": \"0,03\",\n        \"object_temp\": \"\"+(flow.get('too-hot')+1),\n        \"acc_x\": \"-0,02\",\n        \"light\": \"476,96\",\n        \"gyro_z\": \"-0,34\",\n        \"compass_x\": \"-28,17\",\n        \"ambient_temp\": \"24,91\",\n        \"air_pressure\": \"907,32\",\n        \"gyro_y\": \"0,32\",\n        \"compass_z\": \"246,67\",\n        \"acc_z\": \"-1,02\"\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 220,
        "wires": [
            [
                "718175a6.6bb4f4"
            ]
        ]
    },
    {
        "id": "495e85b4.6813a4",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "COLD PAYLOAD",
        "func": "msg.payload = {\n    \"d\": {\n        \"gyro_x\": \"-0,08\",\n        \"compass_y\": \"-35,67\",\n        \"acc_y\": \"0,03\",\n        \"object_temp\": \"\"+(flow.get('too-cold')-1),\n        \"acc_x\": \"-0,02\",\n        \"light\": \"476,96\",\n        \"gyro_z\": \"-0,34\",\n        \"compass_x\": \"-28,17\",\n        \"ambient_temp\": \"24,91\",\n        \"air_pressure\": \"907,32\",\n        \"gyro_y\": \"0,32\",\n        \"compass_z\": \"246,67\",\n        \"acc_z\": \"-1,02\"\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 260,
        "wires": [
            [
                "718175a6.6bb4f4"
            ]
        ]
    },
    {
        "id": "20ad2ad7.94e906",
        "type": "function",
        "z": "33a93ce2.8961ec",
        "name": "CRASH PAYLOAD",
        "func": "msg.payload = {\n    \"d\": {\n        \"gyro_x\": \"-0,08\",\n        \"compass_y\": \"-35,67\",\n        \"acc_y\": \"0,00\",\n        \"object_temp\": \"35,22\",\n        \"acc_x\": \"0,00\",\n        \"light\": \"476,96\",\n        \"gyro_z\": \"-0,34\",\n        \"compass_x\": \"-28,17\",\n        \"ambient_temp\": \"24,91\",\n        \"air_pressure\": \"907,32\",\n        \"gyro_y\": \"0,32\",\n        \"compass_z\": \"246,67\",\n        \"acc_z\": \"\"+(flow.get('allowed-acc')+1)\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 300,
        "wires": [
            [
                "718175a6.6bb4f4"
            ]
        ]
    },
    {
        "id": "870e7801.aead1",
        "type": "ibmiot in",
        "z": "33a93ce2.8961ec",
        "authentication": "quickstart",
        "apiKey": "b01e647f.0e3da8",
        "inputType": "evt",
        "deviceId": "546c0e53024a",
        "applicationId": "",
        "deviceType": "+",
        "eventType": "+",
        "commandType": "",
        "format": "json",
        "name": "IBM IoT Katherine 1",
        "service": "quickstart",
        "allDevices": "",
        "allApplications": "",
        "allDeviceTypes": true,
        "allEvents": true,
        "allCommands": "",
        "allFormats": "",
        "qos": 0,
        "x": 490,
        "y": 480,
        "wires": [
            [
                "718175a6.6bb4f4"
            ]
        ]
    },
    {
        "id": "c4af8a6d.1a6d9",
        "type": "ibmiot in",
        "z": "33a93ce2.8961ec",
        "authentication": "quickstart",
        "apiKey": "b01e647f.0e3da8",
        "inputType": "evt",
        "deviceId": "98072d324601",
        "applicationId": "",
        "deviceType": "+",
        "eventType": "+",
        "commandType": "",
        "format": "json",
        "name": "IBM IoT Katherine 2",
        "service": "quickstart",
        "allDevices": "",
        "allApplications": "",
        "allDeviceTypes": true,
        "allEvents": true,
        "allCommands": "",
        "allFormats": "",
        "qos": 0,
        "x": 490,
        "y": 520,
        "wires": [
            [
                "718175a6.6bb4f4"
            ]
        ]
    },
    {
        "id": "87ba755a.faa83",
        "type": "comment",
        "z": "33a93ce2.8961ec",
        "name": "DEBUGGING INPUTS",
        "info": "",
        "x": 480,
        "y": 140,
        "wires": []
    },
    {
        "id": "40a21a0c.73f0dc",
        "type": "comment",
        "z": "33a93ce2.8961ec",
        "name": "LIVE IOT INPUTS",
        "info": "",
        "x": 500,
        "y": 400,
        "wires": []
    },
    {
        "id": "8756c97e.bd9eb",
        "type": "comment",
        "z": "33a93ce2.8961ec",
        "name": "On connect insurance reponds here with VIN",
        "info": "",
        "x": 291,
        "y": 659,
        "wires": []
    }
]